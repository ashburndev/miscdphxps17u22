Tue Jun 21 05:10:24 AM EDT 2022

davidho@dphxps17:~$ 
davidho@dphxps17:~$ date
Tue Jun 21 05:10:18 AM EDT 2022
davidho@dphxps17:~$ 
davidho@dphxps17:~$ date > stuff-20220621.txt
davidho@dphxps17:~$ code   stuff-20220621.txt
davidho@dphxps17:~$ 

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://code.visualstudio.com/docs/containers/overview
https://docs.microsoft.com/en-us/visualstudio/docker/tutorials/docker-tutorial
https://medium.com/geekculture/configure-visual-studio-code-as-a-default-git-editor-diff-tool-or-merge-tool-291fd7088cc9
https://code.visualstudio.com/docs/setup/linux
https://code.visualstudio.com/updates/v1_68
https://code.visualstudio.com/docs/introvideos/productivity
https://marketplace.visualstudio.com/items?itemName=castwide.solargraph
https://www.rubydoc.info/gems/yard/file/docs/GettingStarted.md
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/connecting.html

https://localhost:9200/
https://localhost:5601/
http://localhost:5601/login?next=%2Fapp%2Fdev_tools#/console
https://stackoverflow.com/questions/15144046/converting-pkcs12-certificate-into-pem-using-openssl
https://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html
https://sdkman.io/usage
https://projects.eclipse.org/projects/adoptium.temurin

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://github.com/elastic/elasticsearch-ruby

https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/index.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/ruby_client.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/ruby-install.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/connecting.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/ruby-config.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/integrations.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/examples.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/release_notes.html
https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/release_notes_82.html

https://guides.rubygems.org/command-reference/
https://rubygems.org/search?query=elasticsearch
https://rubygems.org/gems/elasticsearch

gem install elasticsearch

https://rubygems.org/gems/elasticsearch/versions
https://rubygems.org/gems/elasticsearch/versions/8.2.2

Gemfile: gem 'elasticsearch', '~> 8.2', '>= 8.2.2'
Install: gem install elasticsearch

https://rubygems.org/search?query=opensearch
https://rubygems.org/gems/opensearch-ruby
https://rubygems.org/gems/opensearch-api
https://rubygems.org/gems/opensearch-transport

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/connecting.html

Connecting to a self-managed cluster

client = Elasticsearch::Client.new(
  host: "https://elastic:#{ELASTIC_PASSWORD}@localhost:9200",
  transport_options: { ssl: { ca_path: CERT_DIR } }
)

... or ...

# Colons and uppercase/lowercase don't matter when using
# the 'ca_fingerprint' parameter
CERT_FINGERPRINT = '64F2593F...'

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "<password>"

client = Elasticsearch::Client.new(
  host: "https://elastic:#{ELASTIC_PASSWORD}@localhost:9200",
  transport_options: { ssl: { verify: false } },
  ca_fingerprint: CERT_FINGERPRINT
)

... or ...

API Key authentication
edit

You can also use ApiKey authentication.

If you provide both basic authentication credentials and the ApiKey configuration, the ApiKey takes precedence.

Elasticsearch::Client.new(
  host: host,
  transport_options: transport_options,
  api_key: credentials
)

Where credentials is either the base64 encoding of id and api_key joined by a colon or a hash with the id and api_key:

Elasticsearch::Client.new(
  host: host,
  transport_options: transport_options,
  api_key: {id: 'my_id', api_key: 'my_api_key'}
)

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

The following snippet shows an example of using the Ruby client:

require 'elasticsearch'

client = Elasticsearch::Client.new log: true

client.cluster.health

client.index(index: 'my-index', id: 1, body: { title: 'Test' })

client.indices.refresh(index: 'my-index')

client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

davidho@dphxps17:~/Downloads/elastic/elasticsearch-8.2.2/config/certs$ pwd -P
/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs
davidho@dphxps17:~/Downloads/elastic/elasticsearch-8.2.2/config/certs$ ls -latr
total 32
-rw-rw---- 1 davidho davidho  1915 Jun  6 03:42 http_ca.crt
-rw-rw---- 1 davidho davidho  5822 Jun  6 03:42 transport.p12
-rw-rw---- 1 davidho davidho 10013 Jun  6 03:42 http.p12
drwxr-xr-x 4 davidho davidho  4096 Jun  6 03:42 ..
-rw------- 1 davidho davidho     0 Jun 12 11:59 elastic.crt.pem
drwxr-x--- 2 davidho davidho  4096 Jun 12 11:59 .
davidho@dphxps17:~/Downloads/elastic/elasticsearch-8.2.2/config/certs$ 

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

require 'elasticsearch'
ELASTIC_USERNAME = "elastic"
ELASTIC_PASSWORD = "fn8*-BZRBp6Ztt0Rj+Rr"
CERT_DIR = "/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs"
CERT_FINGERPRINT = "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"

# client = Elasticsearch::Client.new log: true

client = Elasticsearch::Client.new(                                 \
  host: "https://elastic:#{ELASTIC_PASSWORD}@localhost:9200",       \
  transport_options: { ssl: { ca_path: CERT_DIR } }
)

# client.cluster.health

client.index(index: 'my-index', id: 1, body: { title: 'Test' })

client.indices.refresh(index: 'my-index')

client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })

irb(main):016:0> client.index(index: 'my-index', id: 1, body: { title: 'Test' })
The client is unable to verify that the server is Elasticsearch. Some functionality may not be compatible if the server is running an unsupported product.
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/net-protocol-0.1.3/lib/net/protocol.rb:46:in `ssl_socket_connect'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/3.1.0/net/http.rb:1048:in `connect'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/3.1.0/net/http.rb:976:in `do_start'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/3.1.0/net/http.rb:965:in `start'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-net_http-1.0.1/lib/faraday/adapter/net_http.rb:138:in `request_via_get_method'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-net_http-1.0.1/lib/faraday/adapter/net_http.rb:129:in `request_with_wrapped_block'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-net_http-1.0.1/lib/faraday/adapter/net_http.rb:122:in `perform_request'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-net_http-1.0.1/lib/faraday/adapter/net_http.rb:66:in `block in call'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-1.10.0/lib/faraday/adapter.rb:50:in `connection'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-net_http-1.0.1/lib/faraday/adapter/net_http.rb:64:in `call'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-1.10.0/lib/faraday/rack_builder.rb:154:in `build_response'
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/faraday-1.10.0/lib/faraday/connection.rb:516:in `run_request'

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

require 'elasticsearch'
ELASTIC_USERNAME = "elastic"
ELASTIC_PASSWORD = "fn8*-BZRBp6Ztt0Rj+Rr"
CERT_DIR = "/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs"
CERT_FINGERPRINT = "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"

# client = Elasticsearch::Client.new log: true

client = Elasticsearch::Client.new(                              \
  host: "https://elastic:#{ELASTIC_PASSWORD}@localhost:9200",    \
  transport_options: { ssl: { verify: false } },                 \
  ca_fingerprint: CERT_FINGERPRINT
)

client.cluster.health

client.index(index: 'my-index', id: 1, body: { title: 'Test' })

client.indices.refresh(index: 'my-index')

client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })


davidho@dphxps17:~/Documents$ 
davidho@dphxps17:~/Documents$ irb 
irb(main):001:0> require 'elasticsearch'
=> true
irb(main):002:0> ELASTIC_USERNAME = "elastic"
=> "elastic"
irb(main):003:0> ELASTIC_PASSWORD = "fn8*-BZRBp6Ztt0Rj+Rr"
=> "fn8*-BZRBp6Ztt0Rj+Rr"
irb(main):004:0> CERT_DIR = "/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs"
=> "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"
irb(main):006:0> 
irb(main):007:0* # client = Elasticsearch::Client.new log: true
irb(main):008:0* 
irb(main):009:1* client = Elasticsearch::Client.new(                              \
irb(main):010:1*   host: "https://elastic:#{ELASTIC_PASSWORD}@localhost:9200",    \
irb(main):011:1*   transport_options: { ssl: { verify: false } },                 \
=> 
#<Elasticsearch::Client:0x00007f299303fca0
...
irb(main):014:0> 
irb(main):015:0> client.cluster.health
=> 
#<Elasticsearch::API::Response:0x00007f29928ae2e8
   @body=
    {"cluster_name"=>"elasticsearch",
     "status"=>"yellow",
     "timed_out"=>false,
     "number_of_nodes"=>1,
     "number_of_data_nodes"=>1,
     "active_primary_shards"=>15,
     "active_shards"=>15,
     "relocating_shards"=>0,
     "initializing_shards"=>0,
     "unassigned_shards"=>4,
     "delayed_unassigned_shards"=>0,
     "number_of_pending_tasks"=>0,
     "number_of_in_flight_fetch"=>0,
     "task_max_waiting_in_queue_millis"=>0,
     "active_shards_percent_as_number"=>78.94736842105263},
   @headers={"x-elastic-product"=>"Elasticsearch", "content-type"=>"application/json", "content-length"=>"404"},
   @status=200>>
irb(main):016:0> 
irb(main):017:0> client.index(index: 'my-index', id: 1, body: { title: 'Test' })
=> 
#<Elasticsearch::API::Response:0x00007f299318beb0
 @response=
  #<Elastic::Transport::Transport::Response:0x00007f2993184070
   @body={"_index"=>"my-index", "_id"=>"1", "_version"=>1, "result"=>"created", "_shards"=>{"total"=>2, "successful"=>1, "failed"=>0}, "_seq_no"=>0, "_primary_term"=>1},
   @headers={"location"=>"/my-index/_doc/1", "x-elastic-product"=>"Elasticsearch", "content-type"=>"application/json", "content-length"=>"141"},
   @status=201>>
irb(main):018:0> 
irb(main):019:0> client.indices.refresh(index: 'my-index')
=> 
#<Elasticsearch::API::Response:0x00007f2992864b48
 @response=
  #<Elastic::Transport::Transport::Response:0x00007f2992864bc0
   @body={"_shards"=>{"total"=>2, "successful"=>1, "failed"=>0}},
   @headers={"x-elastic-product"=>"Elasticsearch", "content-type"=>"application/json", "content-length"=>"49"},
   @status=200>>
irb(main):020:0> 
irb(main):021:0> client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })
=> 
#<Elasticsearch::API::Response:0x00007f2992906718
 @response=
  #<Elastic::Transport::Transport::Response:0x00007f2992906790
   @body=
    {"took"=>2,
     "timed_out"=>false,
     "_shards"=>{"total"=>1, "successful"=>1, "skipped"=>0, "failed"=>0},
     "hits"=>{"total"=>{"value"=>1, "relation"=>"eq"}, "max_score"=>0.2876821, "hits"=>[{"_index"=>"my-index", "_id"=>"1", "_score"=>0.2876821, "_source"=>{"title"=>"Test"}}]}},
   @headers={"x-elastic-product"=>"Elasticsearch", "content-type"=>"application/json", "content-length"=>"242"},
   @status=200>>
irb(main):022:0> 

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

require 'elasticsearch'
ELASTIC_USERNAME = "elastic"
ELASTIC_PASSWORD = "fn8*-BZRBp6Ztt0Rj+Rr"
CERT_DIR = "/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs"
CERT_FINGERPRINT = "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"

# client = Elasticsearch::Client.new log: true

client = Elasticsearch::Client.new(          \
  hosts:                                     \
	  [                                        \
  	   {                                     \
    	   host: "localhost",                  \
    	   port: "443",                        \
    	   user: "elastic",                    \
    	   password: "fn8*-BZRBp6Ztt0Rj+Rr",   \
    	   scheme: "https"                     \
  	   }                                     \
	  ]                                        \
)

client.cluster.health

client.index(index: 'my-index', id: 1, body: { title: 'Test' })

client.indices.refresh(index: 'my-index')

client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })

davidho@dphxps17:~/Documents$ 
davidho@dphxps17:~/Documents$ irb
irb(main):001:0> require 'elasticsearch'
=> true
irb(main):002:0> ELASTIC_USERNAME = "elastic"
=> "elastic"
irb(main):003:0> ELASTIC_PASSWORD = "fn8*-BZRBp6Ztt0Rj+Rr"
=> "/home/davidho/Downloads/elastic/elasticsearch-8.2.2/config/certs"
irb(main):005:0> CERT_FINGERPRINT = "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"
=> "ae6641a394209d0ac88b0b9ec4fb67225d36bafa6dd62b6dc88c9c6a39155f7c"
irb(main):006:0> 
irb(main):009:1* client = Elasticsearch::Client.new(          \
irb(main):010:1*   hosts:                                     \
irb(main):011:2* source  [                                        \
irb(main):012:3* source     {                                     \
irb(main):015:3* source       user: "elastic",                    \
irb(main):016:3* source       password: "fn8*-BZRBp6Ztt0Rj+Rr",   \
irb(main):017:3* source       scheme: "https"                     \
irb(main):018:2* source     }                                     \
/home/davidho/.rbenv/versions/3.1.2/lib/ruby/3.1.0/irb/workspace.rb:119:in `eval': (irb):11: syntax error, unexpected [, expecting `do' or '{' or '(' (SyntaxError)
source  [                             ...
        ^
(irb):14: syntax error, unexpected label, expecting `do' or '{' or '('
source       port: "443",                      ...
             ^~~~~
(irb):14: syntax error, unexpected ',', expecting '}'
source       port: "443",                        \
                        ^
(irb):16: syntax error, unexpected label, expecting `do' or '{' or '('
source       password: "fn8*-BZRBp6Ztt0Rj+Rr",   \
             ^~~~~~~~~
(irb):16: syntax error, unexpected ',', expecting end-of-input
...ssword: "fn8*-BZRBp6Ztt0Rj+Rr",   \
...                              ^
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/irb-1.4.1/exe/irb:11:in `<top (required)>'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `load'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `<main>'
irb(main):021:0> 
irb(main):022:0> client.cluster.health
(irb):22:in `<main>': undefined local variable or method `client' for main:Object (NameError)
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/irb-1.4.1/exe/irb:11:in `<top (required)>'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `load'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `<main>'
irb(main):023:0> 
irb(main):024:0> client.index(index: 'my-index', id: 1, body: { title: 'Test' })
(irb):24:in `<main>': undefined local variable or method `client' for main:Object (NameError)
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/irb-1.4.1/exe/irb:11:in `<top (required)>'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `load'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `<main>'
irb(main):025:0> 
irb(main):026:0> client.indices.refresh(index: 'my-index')
(irb):26:in `<main>': undefined local variable or method `client' for main:Object (NameError)
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/irb-1.4.1/exe/irb:11:in `<top (required)>'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `load'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `<main>'
irb(main):027:0> 
irb(main):028:0> client.search(index: 'my-index', body: { query: { match: { title: 'test' } } })
(irb):28:in `<main>': undefined local variable or method `client' for main:Object (NameError)
	from /home/davidho/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/irb-1.4.1/exe/irb:11:in `<top (required)>'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `load'
	from /home/davidho/.rbenv/versions/3.1.2/bin/irb:25:in `<main>'
irb(main):029:0> 



