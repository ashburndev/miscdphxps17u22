Mon Dec 12 06:41:52 AM EST 2022

davidho@dphxps17:~$ date
Mon Dec 12 06:41:38 AM EST 2022
davidho@dphxps17:~$ date > stuff-20221212.txt
davidho@dphxps17:~$ code   stuff-20221212.txt
davidho@dphxps17:~$ 

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

DROP DATABASE IF EXISTS dphpyapp1;
DROP USER 'dphpyuser'@'localhost';
CREATE DATABASE dphpyapp1;
CREATE USER 'dphpyuser'@'localhost' IDENTIFIED BY 'dphpyuserpw';
GRANT ALL PRIVILEGES ON dphpyapp1.* TO 'dphpyuser'@'localhost' WITH GRANT OPTION;

CREATE DATABASE dphpyapp2;
GRANT ALL PRIVILEGES ON dphpyapp2.* TO 'dphpyuser'@'localhost' WITH GRANT OPTION;

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

davidho@dphxps17:~$ 
davidho@dphxps17:~$ mysqld --version
/usr/sbin/mysqld  Ver 8.0.31-0ubuntu0.22.04.1 for Linux on x86_64 ((Ubuntu))
davidho@dphxps17:~$ 
davidho@dphxps17:~$ mysql --version
mysql  Ver 8.0.31-0ubuntu0.22.04.1 for Linux on x86_64 ((Ubuntu))
davidho@dphxps17:~$ 
davidho@dphxps17:~$ mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.31-0ubuntu0.22.04.1 (Ubuntu)

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| depot2_development |
| dphpyapp1          |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| wire2_development  |
| wire3_development  |
| wire4_development  |
| wire5_development  |
| wire6_development  |
+--------------------+
11 rows in set (0.00 sec)

mysql> drop database dphpyapp1;
Query OK, 1 row affected (0.05 sec)

mysql> drop user 'dphpyuser'@'localhost';
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE DATABASE dphpyapp1;
Query OK, 1 row affected (0.01 sec)

mysql> CREATE USER 'dphpyuser'@'localhost' IDENTIFIED BY 'dphpyuserpw';
Query OK, 0 rows affected (0.04 sec)

mysql> GRANT ALL PRIVILEGES ON dphpyapp1.* TO 'dphpyuser'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.04 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| depot2_development |
| dphpyapp1          |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| wire2_development  |
| wire3_development  |
| wire4_development  |
| wire5_development  |
| wire6_development  |
+--------------------+
11 rows in set (0.01 sec)

mysql> 
mysql> CREATE TABLE `users` (
    ->     `id` int(11) NOT NULL AUTO_INCREMENT,
    ->     `email` varchar(255) COLLATE utf8_bin NOT NULL,
    ->     `password` varchar(255) COLLATE utf8_bin NOT NULL,
    ->     PRIMARY KEY (`id`)
    -> ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
    -> AUTO_INCREMENT=1 ;
ERROR 1046 (3D000): No database selected
mysql> 
mysql> use dphpyapp1;
Database changed
mysql> show tables;
Empty set (0.00 sec)

mysql> CREATE TABLE `users` (
    ->     `id` int(11) NOT NULL AUTO_INCREMENT,
    ->     `email` varchar(255) COLLATE utf8_bin NOT NULL,
    ->     `password` varchar(255) COLLATE utf8_bin NOT NULL,
    ->     PRIMARY KEY (`id`)
    -> ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
    -> AUTO_INCREMENT=1 ;
Query OK, 0 rows affected, 3 warnings (0.03 sec)

mysql> show tables;
+---------------------+
| Tables_in_dphpyapp1 |
+---------------------+
| users               |
+---------------------+
1 row in set (0.00 sec)

mysql> desc users;
+----------+--------------+------+-----+---------+----------------+
| Field    | Type         | Null | Key | Default | Extra          |
+----------+--------------+------+-----+---------+----------------+
| id       | int          | NO   | PRI | NULL    | auto_increment |
| email    | varchar(255) | NO   |     | NULL    |                |
| password | varchar(255) | NO   |     | NULL    |                |
+----------+--------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)

mysql> 
mysql> select * from users;
+----+----------------------+-------------+
| id | email                | password    |
+----+----------------------+-------------+
|  1 | webmaster@python.org | very-secret |
+----+----------------------+-------------+
1 row in set (0.00 sec)

mysql> 
mysql> select * from users;
+----+----------------------+-------------+
| id | email                | password    |
+----+----------------------+-------------+
|  1 | webmaster@python.org | very-secret |
|  2 | webmaster@python.org | very-secret |
|  3 | webmaster@python.org | very-secret |
+----+----------------------+-------------+
3 rows in set (0.00 sec)

mysql> 
mysql> CREATE DATABASE dphpyapp2;
Query OK, 1 row affected (0.02 sec)

mysql> GRANT ALL PRIVILEGES ON dphpyapp2.* TO 'dphpyuser'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

mysql> 

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

mysql> CREATE DATABASE dphpyapp2;
Query OK, 1 row affected (0.02 sec)

mysql> GRANT ALL PRIVILEGES ON dphpyapp2.* TO 'dphpyuser'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| depot2_development |
| dphpyapp1          |
| dphpyapp2          |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| wire2_development  |
| wire3_development  |
| wire4_development  |
| wire5_development  |
| wire6_development  |
+--------------------+
12 rows in set (0.00 sec)

mysql> use dphpyapp2;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+---------------------+
| Tables_in_dphpyapp2 |
+---------------------+
| students            |
+---------------------+
1 row in set (0.00 sec)

mysql> desc students;
+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| id       | int         | NO   | PRI | NULL    | auto_increment |
| name     | varchar(80) | YES  |     | NULL    |                |
| lastname | varchar(40) | YES  |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)

mysql> select * from students;
Empty set (0.00 sec)

mysql> 

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://pypi.org/project/PyMySQL/

PyMySQL 1.0.2
pip install PyMySQL

You can install it with pip:
$ python3 -m pip install PyMySQL
To use “sha256_password” or “caching_sha2_password” for authenticate, you need to install additional dependency:
$ python3 -m pip install PyMySQL[rsa]

The following examples make use of a simple table

CREATE TABLE `users` (
    `id` int(11) NOT NULL AUTO_INCREMENT,
    `email` varchar(255) COLLATE utf8_bin NOT NULL,
    `password` varchar(255) COLLATE utf8_bin NOT NULL,
    PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
AUTO_INCREMENT=1 ;

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

import pymysql.cursors

# Connect to the database
connection = pymysql.connect(host='localhost',
                             user='user',
                             password='passwd',
                             database='db',
                             cursorclass=pymysql.cursors.DictCursor)

with connection:
    with connection.cursor() as cursor:
        # Create a new record
        sql = "INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)"
        cursor.execute(sql, ('webmaster@python.org', 'very-secret'))

    # connection is not autocommit by default. So you must commit to save
    # your changes.
    connection.commit()

    with connection.cursor() as cursor:
        # Read a single record
        sql = "SELECT `id`, `password` FROM `users` WHERE `email`=%s"
        cursor.execute(sql, ('webmaster@python.org',))
        result = cursor.fetchone()
        print(result)

This example will print:

{'password': 'very-secret', 'id': 1}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

davidho@dphxps17:~$ cd pythonprojs/
davidho@dphxps17:~/pythonprojs$ ls
proj1  proj2
davidho@dphxps17:~/pythonprojs$ cd proj1
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ pip freeze
cffi==1.15.1
cryptography==38.0.4
greenlet==2.0.1
marshmallow==3.19.0
marshmallow-sqlalchemy==0.28.1
packaging==21.3
pycparser==2.21
PyMySQL==1.0.2
pyparsing==3.0.9
SQLAlchemy==1.4.44
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ code .
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ ls -latr
total 16
drwxrwxr-x 5 davidho davidho 4096 Dec  9 05:27 .venv
drwxrwxr-x 3 davidho davidho 4096 Dec  9 05:55 .
drwxrwxr-x 4 davidho davidho 4096 Dec  9 06:16 ..
-rw-rw-r-- 1 davidho davidho  922 Dec 12 06:55 app.py
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ cat app.py
import pymysql.cursors

# Connect to the database
connection = pymysql.connect(host='localhost',
                             user='dphpyuser',
                             password='dphpyuserpw',
                             database='dphpyapp1',
                             cursorclass=pymysql.cursors.DictCursor)

with connection:
    with connection.cursor() as cursor:
        # Create a new record
        sql = "INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)"
        cursor.execute(sql, ('webmaster@python.org', 'very-secret'))

    # connection is not autocommit by default. So you must commit to save
    # your changes.
    connection.commit()

    with connection.cursor() as cursor:
        # Read a single record
        sql = "SELECT `id`, `password` FROM `users` WHERE `email`=%s"
        cursor.execute(sql, ('webmaster@python.org',))
        result = cursor.fetchone()
        print(result)

davidho@dphxps17:~/pythonprojs/proj1$ python3 app.py
Traceback (most recent call last):
  File "/home/davidho/pythonprojs/proj1/app.py", line 14, in <module>
    cursor.execute(sql, ('webmaster@python.org', 'very-secret'))
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/home/davidho/.pyenv/versions/3.11.0/lib/python3.11/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'dphpyapp1.users' doesn't exist")
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ 
davidho@dphxps17:~/pythonprojs/proj1$ python3 app.py
{'id': 1, 'password': 'very-secret'}
davidho@dphxps17:~/pythonprojs/proj1$ python3 app.py
{'id': 1, 'password': 'very-secret'}
davidho@dphxps17:~/pythonprojs/proj1$ python3 app.py
{'id': 1, 'password': 'very-secret'}
davidho@dphxps17:~/pythonprojs/proj1$ 

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

davidho@dphxps17:~/pythonprojs/proj1$ cd ../proj2
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj2$ ls -latr
total 16
drwxrwxr-x 4 davidho davidho 4096 Dec  9 06:16 ..
drwxrwxr-x 5 davidho davidho 4096 Dec  9 06:16 .venv
drwxrwxr-x 3 davidho davidho 4096 Dec  9 06:38 .
-rw-rw-r-- 1 davidho davidho  891 Dec  9 07:03 app.py
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj2$ pip freeze
cffi==1.15.1
cryptography==38.0.4
greenlet==2.0.1
marshmallow==3.19.0
marshmallow-sqlalchemy==0.28.1
packaging==21.3
pycparser==2.21
PyMySQL==1.0.2
pyparsing==3.0.9
SQLAlchemy==1.4.44
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj2$ code .
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj2$ cat app.py
# from sqlalchemy import create_engine

# For a MySQL database, use the below command −
# engine = create_engine("mysql://user:pwd@localhost/college",echo = True)

# To specifically mention DB-API to be used for connection, the URL string takes the form as follows −
# dialect[+driver]://user:password@host/dbname

# For example, if you are using PyMySQL driver with MySQL, use the following command −
# mysql+pymysql://<username>:<password>@<host>/<dbname>

from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String
# engine = create_engine('sqlite:///college.db', echo = True)
engine = create_engine("mysql+pymysql://dphpyuser:dphpyuserpw@localhost/dphpyapp2",echo = True)
meta = MetaData()

students = Table(
   'students', meta, 
   Column('id', Integer, primary_key = True), 
   Column('name', String(80)),      # VARCHAR requires a length on dialect mysql
   Column('lastname', String(40)),  # VARCHAR requires a length on dialect mysql
)
meta.create_all(engine)
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj2$ python3 app.py
2022-12-12 07:27:43,173 INFO sqlalchemy.engine.Engine SELECT DATABASE()
2022-12-12 07:27:43,173 INFO sqlalchemy.engine.Engine [raw sql] {}
2022-12-12 07:27:43,174 INFO sqlalchemy.engine.Engine SELECT @@sql_mode
2022-12-12 07:27:43,174 INFO sqlalchemy.engine.Engine [raw sql] {}
2022-12-12 07:27:43,174 INFO sqlalchemy.engine.Engine SELECT @@lower_case_table_names
2022-12-12 07:27:43,174 INFO sqlalchemy.engine.Engine [raw sql] {}
2022-12-12 07:27:43,175 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2022-12-12 07:27:43,175 INFO sqlalchemy.engine.Engine SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = %(table_schema)s AND table_name = %(table_name)s
2022-12-12 07:27:43,175 INFO sqlalchemy.engine.Engine [generated in 0.00008s] {'table_schema': 'dphpyapp2', 'table_name': 'students'}
2022-12-12 07:27:43,176 INFO sqlalchemy.engine.Engine 
CREATE TABLE students (
	id INTEGER NOT NULL AUTO_INCREMENT, 
	name VARCHAR(80), 
	lastname VARCHAR(40), 
	PRIMARY KEY (id)
)


2022-12-12 07:27:43,176 INFO sqlalchemy.engine.Engine [no key 0.00004s] {}
2022-12-12 07:27:43,228 INFO sqlalchemy.engine.Engine COMMIT
davidho@dphxps17:~/pythonprojs/proj2$ 
davidho@dphxps17:~/pythonprojs/proj1$ cd
davidho@dphxps17:~$ 
davidho@dphxps17:~$ date
Mon Dec 12 07:43:27 AM EST 2022
davidho@dphxps17:~$ 
davidho@dphxps17:~$ 


